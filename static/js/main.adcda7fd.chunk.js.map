{"version":3,"sources":["utils.ts","component/App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTimeLeft","deadline","undefined","date","Date","getTime","Math","floor","createFormat","time","days","hours","minutes","seconds","App","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","tick","ReactDOM","render","StrictMode","document","getElementById","setInterval"],"mappings":"yQAAA,SAASA,IAAqD,IAAzCC,EAAwC,4DAAXC,EAC1CC,EAAa,IAAIC,MAAMH,EAAWA,EAASI,UAAY,IAAID,KAAK,4BAA4BC,YAAc,IAAID,MAAOC,WAE3H,MAAO,CACL,KAAQC,KAAKC,MAAMJ,EAAKE,UAAL,OACnB,MAASC,KAAKC,MAAOJ,EAAKE,UAAL,KAA+B,IACpD,QAAWC,KAAKC,MAAOJ,EAAKE,UAAU,IAAK,GAAK,IAChD,QAAWC,KAAKC,MAAOJ,EAAKE,UAAU,IAAO,IAC7C,MAASF,GAIN,SAASK,IAAsD,IAAzCP,EAAwC,4DAAXC,EAClDO,EAAOT,EAAYC,GACzB,MAAM,GAAN,OAAUQ,EAAKC,KAAf,kBAA6BD,EAAKE,MAAlC,mBAAkDF,EAAKG,QAAvD,qBAA2EH,EAAKI,QAAhF,Y,ICTmBC,E,uKAEjB,OACE,sBAAKC,UAAU,eAAf,0BACgBP,W,GAJWQ,IAAMC,WCSxBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHRQ,EAAO,WACXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,UAI5BL,IACAM,aAAY,WACVN,MACC,KAEHT,M","file":"static/js/main.adcda7fd.chunk.js","sourcesContent":["function getTimeLeft(deadline: Date | undefined = undefined) {\r\n  const date: Date = new Date((deadline ? deadline.getTime() : new Date(\"January 1, 2021 00:00:00\").getTime()) - (new Date().getTime()))\r\n  \r\n  return {\r\n    'days': Math.floor(date.getTime()/(1000*60*60*24)),\r\n    'hours': Math.floor((date.getTime()/(1000*60*60)) % 24),\r\n    'minutes': Math.floor((date.getTime()/1000/60) %60),\r\n    'seconds': Math.floor((date.getTime()/1000) %60),\r\n    'total': date\r\n  }\r\n}\r\n\r\nexport function createFormat(deadline: Date | undefined = undefined) {\r\n  const time = getTimeLeft(deadline)\r\n  return `${time.days} days, ${time.hours} hours, ${time.minutes} minutes, ${time.seconds} seconds`\r\n}","import React from 'react';\nimport './App.css';\nimport { createFormat } from \"../utils\"\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"comonent-app\">\n        New Year in: {createFormat()}\n      </div>\n    )\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst tick = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ntick()\nsetInterval(() => {\n  tick()\n}, 1000)\n\nreportWebVitals();\n"],"sourceRoot":""}